{"abi":[{"type":"function","name":"addAgentTrigger","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"triggerRequestAttestation","inputs":[{"name":"schema","type":"bytes32","internalType":"bytes32"},{"name":"recipient","type":"address","internalType":"address"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"triggerRequestRawAttestation","inputs":[{"name":"schema","type":"bytes32","internalType":"bytes32"},{"name":"recipient","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AttestationRequested","inputs":[{"name":"creator","type":"address","indexed":true,"internalType":"address"},{"name":"schema","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"AttestedEvent","inputs":[{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"attester","type":"address","indexed":true,"internalType":"address"},{"name":"uid","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"schema_uid","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"NewTrigger","inputs":[{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x608080604052346015576101cb908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081630edc58b114610096575080635e05153c1461003d5763a74a482f1461003d575f80fd5b34610092577fe78f5f2148eb9d3b0d5eca1c6babc65797c90fe099e3638697aa19c98acd80c961008d61006f36610127565b6040516001600160a01b03909316959394339493928392908361016e565b0390a4005b5f80fd5b34610092576020366003190112610092576004359067ffffffffffffffff821161009257806100f46100ed7f86eacd23610d81706516de1ed0476c87772fdf939c7c771fbbd7f0230d619e689436906004016100f9565b908361016e565b0390a1005b9181601f840112156100925782359167ffffffffffffffff8311610092576020838186019501011161009257565b606060031982011261009257600435916024356001600160a01b038116810361009257916044359067ffffffffffffffff82116100925761016a916004016100f9565b9091565b90918060409360208452816020850152848401375f828201840152601f01601f191601019056fea26469706673582212209c84ef3fc4c467b55bc8bd11fa8f9d37125948f64f9a75c9b3c3fe5033efd05564736f6c634300081b0033","sourceMap":"231:1922:127:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c9081630edc58b114610096575080635e05153c1461003d5763a74a482f1461003d575f80fd5b34610092577fe78f5f2148eb9d3b0d5eca1c6babc65797c90fe099e3638697aa19c98acd80c961008d61006f36610127565b6040516001600160a01b03909316959394339493928392908361016e565b0390a4005b5f80fd5b34610092576020366003190112610092576004359067ffffffffffffffff821161009257806100f46100ed7f86eacd23610d81706516de1ed0476c87772fdf939c7c771fbbd7f0230d619e689436906004016100f9565b908361016e565b0390a1005b9181601f840112156100925782359167ffffffffffffffff8311610092576020838186019501011161009257565b606060031982011261009257600435916024356001600160a01b038116810361009257916044359067ffffffffffffffff82116100925761016a916004016100f9565b9091565b90918060409360208452816020850152848401375f828201840152601f01601f191601019056fea26469706673582212209c84ef3fc4c467b55bc8bd11fa8f9d37125948f64f9a75c9b3c3fe5033efd05564736f6c634300081b0033","sourceMap":"231:1922:127:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:64;;231:1922;;;:::i;:::-;;;-1:-1:-1;;;;;231:1922:127;;;;;;1431:10;;231:1922;;;;;;1410:64;:::i;:::-;;;;231:1922;;;;;;;;;;;-1:-1:-1;;231:1922:127;;;;;;;;;;;;;2121:23;231:1922;2121:23;231:1922;;;;;;:::i;:::-;2121:23;;;:::i;:::-;;;;231:1922;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;231:1922:127;;;;;;;;;;-1:-1:-1;;;;;231:1922:127;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;231:1922:127;;;;:::o","linkReferences":{}},"methodIdentifiers":{"addAgentTrigger(string)":"0edc58b1","triggerRequestAttestation(bytes32,address,string)":"a74a482f","triggerRequestRawAttestation(bytes32,address,bytes)":"5e05153c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"AttestationRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schema_uid\",\"type\":\"bytes32\"}],\"name\":\"AttestedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"NewTrigger\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"addAgentTrigger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"triggerRequestAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"triggerRequestRawAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows direct attestation data submission to WAVS for testing\",\"events\":{\"AttestationRequested(address,bytes32,address,bytes)\":{\"params\":{\"creator\":\"Address requesting the attestation\",\"data\":\"Attestation data\",\"recipient\":\"Recipient of the attestation\",\"schema\":\"Schema UID for the attestation\"}},\"NewTrigger(bytes)\":{\"params\":{\"data\":\"Agent trigger data as bytes\"}}},\"kind\":\"dev\",\"methods\":{\"addAgentTrigger(string)\":{\"params\":{\"data\":\"The agent trigger data as string\"}},\"triggerRequestAttestation(bytes32,address,string)\":{\"params\":{\"data\":\"The attestation data as string\",\"recipient\":\"The recipient address (use zero address for no specific recipient)\",\"schema\":\"The schema UID for the attestation\"}},\"triggerRequestRawAttestation(bytes32,address,bytes)\":{\"params\":{\"data\":\"Raw attestation data (will use component defaults)\"}}},\"title\":\"EASAttestTrigger\",\"version\":1},\"userdoc\":{\"events\":{\"AttestationRequested(address,bytes32,address,bytes)\":{\"notice\":\"Event for direct attestation requests (no wrapper events)\"},\"AttestedEvent(address,address,bytes32,bytes32)\":{\"notice\":\"EAS Attested event that WAVS component expects\"},\"NewTrigger(bytes)\":{\"notice\":\"Event for new agent triggers\"}},\"kind\":\"user\",\"methods\":{\"addAgentTrigger(string)\":{\"notice\":\"Creates an agent trigger with string data\"},\"triggerRequestAttestation(bytes32,address,string)\":{\"notice\":\"Creates an attestation trigger with JSON data\"},\"triggerRequestRawAttestation(bytes32,address,bytes)\":{\"notice\":\"Creates an attestation trigger with raw bytes data\"}},\"notice\":\"Simplified trigger contract for WAVS EAS testing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/eas/EASAttestTrigger.sol\":\"EASAttestTrigger\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-attestation-service/eas-contracts/=node_modules/@ethereum-attestation-service/eas-contracts/\",\":@gnosis-guild/zodiac-core/=node_modules/@gnosis-guild/zodiac-core/contracts/\",\":@gnosis.pm/safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/\",\":@lay3rlabs/conditional-tokens-contracts/=node_modules/@lay3rlabs/conditional-tokens-contracts/contracts/\",\":@lay3rlabs/conditional-tokens-market-makers/=node_modules/@lay3rlabs/conditional-tokens-market-makers/contracts/\",\":@lay3rlabs/poa-middleware/=node_modules/@lay3rlabs/poa-middleware/contracts/\",\":@metalex-tech/metavest/=node_modules/metalex-tech/metavest/src/\",\":@morpho-org/universal-rewards-distributor/=node_modules/@morpho-org/universal-rewards-distributor/src/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@transmissions11/vrgda/=node_modules/transmissions11/vrgda/src/\",\":@wavs/=node_modules/@wavs/solidity/contracts/\",\":common/=src/common/\",\":contracts/=src/contracts/\",\":forge-std/=node_modules/forge-std/src/\",\":interfaces/=src/interfaces/\",\":solmate/=node_modules/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/contracts/eas/EASAttestTrigger.sol\":{\"keccak256\":\"0xefe3787c513c3602e3c3214293dc4c7464670d450e5439608c3da13975f47894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11b84c98e4571456b01d4fd9353d2fb9863ee39f641de66017e5a66ecd9623d3\",\"dweb:/ipfs/QmVzaVEZ8iyS4thHCwM7Nb67HUCPtEVrvynJLcCTVrgp8k\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"creator","type":"address","indexed":true},{"internalType":"bytes32","name":"schema","type":"bytes32","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"AttestationRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"address","name":"attester","type":"address","indexed":true},{"internalType":"bytes32","name":"uid","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"schema_uid","type":"bytes32","indexed":true}],"type":"event","name":"AttestedEvent","anonymous":false},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"NewTrigger","anonymous":false},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addAgentTrigger"},{"inputs":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"triggerRequestAttestation"},{"inputs":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"triggerRequestRawAttestation"}],"devdoc":{"kind":"dev","methods":{"addAgentTrigger(string)":{"params":{"data":"The agent trigger data as string"}},"triggerRequestAttestation(bytes32,address,string)":{"params":{"data":"The attestation data as string","recipient":"The recipient address (use zero address for no specific recipient)","schema":"The schema UID for the attestation"}},"triggerRequestRawAttestation(bytes32,address,bytes)":{"params":{"data":"Raw attestation data (will use component defaults)"}}},"version":1},"userdoc":{"kind":"user","methods":{"addAgentTrigger(string)":{"notice":"Creates an agent trigger with string data"},"triggerRequestAttestation(bytes32,address,string)":{"notice":"Creates an attestation trigger with JSON data"},"triggerRequestRawAttestation(bytes32,address,bytes)":{"notice":"Creates an attestation trigger with raw bytes data"}},"version":1}},"settings":{"remappings":["@ethereum-attestation-service/eas-contracts/=node_modules/@ethereum-attestation-service/eas-contracts/","@gnosis-guild/zodiac-core/=node_modules/@gnosis-guild/zodiac-core/contracts/","@gnosis.pm/safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/","@lay3rlabs/conditional-tokens-contracts/=node_modules/@lay3rlabs/conditional-tokens-contracts/contracts/","@lay3rlabs/conditional-tokens-market-makers/=node_modules/@lay3rlabs/conditional-tokens-market-makers/contracts/","@lay3rlabs/poa-middleware/=node_modules/@lay3rlabs/poa-middleware/contracts/","@metalex-tech/metavest/=node_modules/metalex-tech/metavest/src/","@morpho-org/universal-rewards-distributor/=node_modules/@morpho-org/universal-rewards-distributor/src/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@transmissions11/vrgda/=node_modules/transmissions11/vrgda/src/","@wavs/=node_modules/@wavs/solidity/contracts/","common/=src/common/","contracts/=src/contracts/","forge-std/=node_modules/forge-std/src/","interfaces/=src/interfaces/","solmate/=node_modules/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/contracts/eas/EASAttestTrigger.sol":"EASAttestTrigger"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/contracts/eas/EASAttestTrigger.sol":{"keccak256":"0xefe3787c513c3602e3c3214293dc4c7464670d450e5439608c3da13975f47894","urls":["bzz-raw://11b84c98e4571456b01d4fd9353d2fb9863ee39f641de66017e5a66ecd9623d3","dweb:/ipfs/QmVzaVEZ8iyS4thHCwM7Nb67HUCPtEVrvynJLcCTVrgp8k"],"license":"MIT"}},"version":1},"id":127}