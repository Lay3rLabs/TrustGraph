{
  "id": "83a625be-8c4d-4eb3-8699-31dbc00d79ec",
  "prevId": "df4901cd-3bfe-47f6-b60f-1953b8fac4a4",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "offchain.follower_count": {
      "name": "follower_count",
      "schema": "offchain",
      "columns": {
        "timestamp": {
          "name": "timestamp",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "twitterAccount": {
          "name": "twitterAccount",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "followers": {
          "name": "followers",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "offchain.merkle_entry": {
      "name": "merkle_entry",
      "schema": "offchain",
      "columns": {
        "root": {
          "name": "root",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "account": {
          "name": "account",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ipfsHashCid": {
          "name": "ipfsHashCid",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "proof": {
          "name": "proof",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "blockNumber": {
          "name": "blockNumber",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "merkle_entry_root_index": {
          "name": "merkle_entry_root_index",
          "columns": [
            {
              "expression": "root",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_entry_account_index": {
          "name": "merkle_entry_account_index",
          "columns": [
            {
              "expression": "account",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_entry_ipfsHashCid_index": {
          "name": "merkle_entry_ipfsHashCid_index",
          "columns": [
            {
              "expression": "ipfsHashCid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_entry_blockNumber_index": {
          "name": "merkle_entry_blockNumber_index",
          "columns": [
            {
              "expression": "blockNumber",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_entry_timestamp_index": {
          "name": "merkle_entry_timestamp_index",
          "columns": [
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_entry_account_timestamp_index": {
          "name": "merkle_entry_account_timestamp_index",
          "columns": [
            {
              "expression": "account",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "merkle_entry_root_account_pk": {
          "name": "merkle_entry_root_account_pk",
          "columns": [
            "root",
            "account"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "offchain.merkle_metadata": {
      "name": "merkle_metadata",
      "schema": "offchain",
      "columns": {
        "root": {
          "name": "root",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "ipfsHash": {
          "name": "ipfsHash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ipfsHashCid": {
          "name": "ipfsHashCid",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "numAccounts": {
          "name": "numAccounts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "totalValue": {
          "name": "totalValue",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "sources": {
          "name": "sources",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "blockNumber": {
          "name": "blockNumber",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "merkle_metadata_root_index": {
          "name": "merkle_metadata_root_index",
          "columns": [
            {
              "expression": "root",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_metadata_ipfsHashCid_index": {
          "name": "merkle_metadata_ipfsHashCid_index",
          "columns": [
            {
              "expression": "ipfsHashCid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_metadata_blockNumber_index": {
          "name": "merkle_metadata_blockNumber_index",
          "columns": [
            {
              "expression": "blockNumber",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "merkle_metadata_timestamp_index": {
          "name": "merkle_metadata_timestamp_index",
          "columns": [
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {
    "offchain": "offchain"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}