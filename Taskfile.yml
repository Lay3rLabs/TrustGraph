# https://taskfile.dev/installation/
# - npm install -g @go-task/cli
version: "3"

silent: true

dotenv: [".env"]

includes:
  # Upstream common taskfiles (from wavs-taskfiles repo)
  build: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/build.yml
  docker: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/docker.yml
  operator: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/poa-operator.yml
  services: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/services.yml
  wasi: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/wasi.yml
  deploy: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/deploy.yml
  core:
    taskfile: https://raw.githubusercontent.com/Lay3rLabs/wavs-taskfiles/main/base/core.yml
    flatten: true

  # Project-specific taskfiles (with customizations)
  eas: ./taskfile/eas.yml
  forge: ./taskfile/eas-forge.yml
  rewards: ./taskfile/rewards.yml
  trustgraph: ./taskfile/trustgraph.yml
  env:
    taskfile: ./taskfile/env.yml
    flatten: true

vars:
  # Docker configuration
  DOCKER_IMAGE: '{{.DOCKER_IMAGE | default "ghcr.io/lay3rlabs/wavs:1.5.0"}}'
  MIDDLEWARE_DOCKER_IMAGE: '{{.MIDDLEWARE_DOCKER_IMAGE | default "ghcr.io/lay3rlabs/wavs-middleware:0.5.0-beta.10"}}'

  # Check if user is in docker group to determine if sudo is needed
  DOCKER_SUDO:
    sh: |
      if groups | grep -q docker; then echo ''; else echo 'sudo'; fi

  # Default endpoints
  RPC_URL: '{{.RPC_URL | default "http://127.0.0.1:8545"}}'
  WAVS_ENDPOINT: '{{.WAVS_ENDPOINT | default "http://127.0.0.1:8041"}}'
  AGGREGATOR_URL: '{{.AGGREGATOR_URL | default "http://127.0.0.1:8040"}}'
  IPFS_ENDPOINT: '{{.IPFS_ENDPOINT | default "http://127.0.0.1:5001"}}'
  IPFS_GATEWAY: '{{.IPFS_GATEWAY | default "http://127.0.0.1:8080/ipfs/"}}'

tasks:
  default:
    cmds:
      - task --list-all

  help:
    cmds:
      - task --list-all

  setup:
    desc: "Install initial dependencies"
    cmds:
      - |
        echo "ðŸ“¦ Installing npm dependencies..."
        npm install
        echo "ðŸ“¦ Installing forge dependencies..."
        forge install
        echo "âœ… Dependencies installed"

  start-all-local:
    desc: "Start all local services (anvil, IPFS, WARG, Jaeger, prometheus)"
    deps: [setup-env]
    cmds:
      - task: services:start-all

  deploy-full:
    desc: "Run complete WAVS deployment pipeline"
    cmds:
      - |
        export AGGREGATOR_URL={{.AGGREGATOR_URL}}
        bash ./script/deploy-script.sh

